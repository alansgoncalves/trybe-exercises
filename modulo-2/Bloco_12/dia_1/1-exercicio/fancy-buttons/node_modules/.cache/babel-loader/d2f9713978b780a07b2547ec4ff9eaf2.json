{"ast":null,"code":"var _jsxFileName = \"/Users/alan/projects/trybe-exercises/modulo-2/Bloco_12/dia_1/1-exercicio/fancy-buttons/src/App.js\";\nimport React from 'react';\nimport './App.css'; // 1 - Crie uma aplicação React com npx create-react-app fancy-buttons . Altere o componente App.js para que seja um componente de classe e contenha um botão associado a um evento que imprime um texto qualquer via console.log()\n// 2 - Faça com que sua aplicação exiba três botões lado a lado com textos diferentes. Cada botão clicado deve acionar um evento diferente, cada um escrevendo algo diferente no console do navegador via console.log() .\n// function handleClick() {\n//   console.log('The world is yours!')\n// }\n// function handleClick2() {\n//   console.log('My country')\n// }\n// function handleClick3() {\n//   console.log('Scarface')\n// }\n// class App extends React.Component {\n//   render() { \n//     return (\n//       <div>\n//     <button onClick={handleClick}>Button 1</button>\n//     <button onClick={handleClick2}>Button 2</button>\n//     <button onClick={handleClick3}>Button 3</button>\n//     </div>\n//     );\n//   }\n// }\n// export default App;\n// 3 - Declare dentro da classe do seu componente dos exercícios de fixação acima a função que lida com o evento que antes era lidado por uma função do lado de fora da classe!\n// 4 - Garanta acesso ao objeto this na função que você declarou\n// class App extends React.Component {\n//   constructor() {\n//     super()\n//     this.handleClick = this.handleClick.bind(this)\n//     this.handleClick2 = this.handleClick2.bind(this)\n//     this.handleClick3 = this.handleClick3.bind(this)\n//   }\n// handleClick() {\n//   console.log('The world is yours!', this)  //Acesso ao objeto this na função que você declarou\n// }\n// handleClick2() {\n//   console.log('My country', this)\n// }\n// handleClick3() {\n//   console.log('Scarface', this)\n// }\n// render() {\n//   return (\n//     <div>\n//     <button onClick={this.handleClick}>Button 1</button>\n//     <button onClick={this.handleClick2}>Button 2</button>\n//     <button onClick={this.handleClick3}>Button 3</button>\n//     </div>\n//   )\n// }\n// }\n// export default App;\n// 5 - Agora você vai converter sua aplicação para uma que conta o número de cliques dado em cada botão! Primeiramente, defina um estado inicial para a contagem de cada botão:\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      numberOfClicks1: 0\n    };\n    this.handleClick2 = this.handleClick2.bind(this);\n    this.state = {\n      numberOfClicks2: 0\n    };\n    this.handleClick3 = this.handleClick3.bind(this);\n    this.state = {\n      numberOfClicks3: 0\n    };\n  }\n\n  handleClickx() {\n    this.setState((previousState, _props) => ({\n      numberOfClicks1: previousState.numberOfClicks1 + 1\n    })); // console.log('The world is yours!', this)  //Acesso ao objeto this na função que você declarou\n  }\n\n  handleClick2() {\n    this.setState((previousState, _props) => ({\n      numberOfClicks2: previousState.numberOfClicks2 + 1\n    })); // console.log('My country', this)\n  }\n\n  handleClick3() {\n    this.setState((previousState, _props) => ({\n      numberOfClicks3: previousState.numberOfClicks3 + 1\n    })); // console.log('Scarface', this)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: [\"Button 1 | Count = \", this.state.numberOfClicks1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick2,\n        children: [\"Button 2 | Count = \", this.state.numberOfClicks2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick3,\n        children: [\"Button 3 | Count = \", this.state.numberOfClicks3]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alan/projects/trybe-exercises/modulo-2/Bloco_12/dia_1/1-exercicio/fancy-buttons/src/App.js"],"names":["React","App","Component","constructor","handleClick","bind","state","numberOfClicks1","handleClick2","numberOfClicks2","handleClick3","numberOfClicks3","handleClickx","setState","previousState","_props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACXG,MAAAA,eAAe,EAAE;AADN,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBL,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACXK,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEHC,EAAAA,YAAY,GAAG;AACb,SAAKC,QAAL,CAAc,CAACC,aAAD,EAAgBC,MAAhB,MAA4B;AACxCR,MAAAA,eAAe,EAAEO,aAAa,CAACP,eAAd,GAAgC;AADT,KAA5B,CAAd,EADa,CAIb;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,SAAKK,QAAL,CAAc,CAACC,aAAD,EAAgBC,MAAhB,MAA4B;AACxCN,MAAAA,eAAe,EAAEK,aAAa,CAACL,eAAd,GAAgC;AADT,KAA5B,CAAd,EADa,CAIb;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,SAAKG,QAAL,CAAc,CAACC,aAAD,EAAgBC,MAAhB,MAA4B;AACxCJ,MAAAA,eAAe,EAAEG,aAAa,CAACH,eAAd,GAAgC;AADT,KAA5B,CAAd,EADa,CAIb;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAE,KAAKZ,WAAtB;AAAA,0CAAuD,KAAKE,KAAL,CAAWC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAE,KAAKC,YAAtB;AAAA,0CAAwD,KAAKF,KAAL,CAAWG,eAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,OAAO,EAAE,KAAKC,YAAtB;AAAA,0CAAwD,KAAKJ,KAAL,CAAWK,eAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAhDiC;;AAmDlC,eAAeV,GAAf","sourcesContent":["import React from 'react'\nimport './App.css';\n\n// 1 - Crie uma aplicação React com npx create-react-app fancy-buttons . Altere o componente App.js para que seja um componente de classe e contenha um botão associado a um evento que imprime um texto qualquer via console.log()\n\n// 2 - Faça com que sua aplicação exiba três botões lado a lado com textos diferentes. Cada botão clicado deve acionar um evento diferente, cada um escrevendo algo diferente no console do navegador via console.log() .\n\n// function handleClick() {\n//   console.log('The world is yours!')\n// }\n\n// function handleClick2() {\n//   console.log('My country')\n// }\n\n// function handleClick3() {\n//   console.log('Scarface')\n// }\n\n// class App extends React.Component {\n//   render() { \n//     return (\n//       <div>\n//     <button onClick={handleClick}>Button 1</button>\n//     <button onClick={handleClick2}>Button 2</button>\n//     <button onClick={handleClick3}>Button 3</button>\n//     </div>\n//     );\n//   }\n// }\n \n// export default App;\n\n\n\n// 3 - Declare dentro da classe do seu componente dos exercícios de fixação acima a função que lida com o evento que antes era lidado por uma função do lado de fora da classe!\n\n// 4 - Garanta acesso ao objeto this na função que você declarou\n\n// class App extends React.Component {\n//   constructor() {\n//     super()\n//     this.handleClick = this.handleClick.bind(this)\n//     this.handleClick2 = this.handleClick2.bind(this)\n//     this.handleClick3 = this.handleClick3.bind(this)\n//   }\n\n// handleClick() {\n//   console.log('The world is yours!', this)  //Acesso ao objeto this na função que você declarou\n// }\n\n// handleClick2() {\n//   console.log('My country', this)\n// }\n\n// handleClick3() {\n//   console.log('Scarface', this)\n// }\n\n// render() {\n//   return (\n//     <div>\n//     <button onClick={this.handleClick}>Button 1</button>\n//     <button onClick={this.handleClick2}>Button 2</button>\n//     <button onClick={this.handleClick3}>Button 3</button>\n//     </div>\n//   )\n// }\n\n// }\n\n// export default App;\n\n\n// 5 - Agora você vai converter sua aplicação para uma que conta o número de cliques dado em cada botão! Primeiramente, defina um estado inicial para a contagem de cada botão:\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.handleClick = this.handleClick.bind(this)\n    this.state = {\n      numberOfClicks1: 0\n    }\n\n    this.handleClick2 = this.handleClick2.bind(this)\n    this.state = {\n      numberOfClicks2: 0\n    }\n\n    this.handleClick3 = this.handleClick3.bind(this)\n    this.state = {\n      numberOfClicks3: 0\n    }\n  }\n\nhandleClickx() {\n  this.setState((previousState, _props) => ({\n    numberOfClicks1: previousState.numberOfClicks1 + 1\n  }))\n  // console.log('The world is yours!', this)  //Acesso ao objeto this na função que você declarou\n}\n\nhandleClick2() {\n  this.setState((previousState, _props) => ({\n    numberOfClicks2: previousState.numberOfClicks2 + 1\n  }))\n  // console.log('My country', this)\n}\n\nhandleClick3() {\n  this.setState((previousState, _props) => ({\n    numberOfClicks3: previousState.numberOfClicks3 + 1\n  }))\n  // console.log('Scarface', this)\n}\n\nrender() {\n  return (\n    <div>\n    <button onClick={this.handleClick}>Button 1 | Count = {this.state.numberOfClicks1}</button>\n    <button onClick={this.handleClick2}>Button 2 | Count = {this.state.numberOfClicks2}</button>\n    <button onClick={this.handleClick3}>Button 3 | Count = {this.state.numberOfClicks3}</button>\n    </div>\n  )\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}